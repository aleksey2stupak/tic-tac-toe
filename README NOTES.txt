1) нарисовать от руки интерфейс приложения (внешний вид страницы, нужно чтобы показывались название игры, номер текущего раунда, счет, поле для игры)
2) продумать модель данных (т.е. из каких объектов у тебя будет состоять игра)
3) создать папку для проекта, положить в нее файл README.
4) создать локальный гит-репозиторий в папке
5) создать репозиторий на гитхабе и залить в него локальный гит-репозиторий
6) создать в папке проекта файлы index.html, app.js и styles.css, закомитить их в гит и залить на гитхаб
7) в index.html написать базовую разметку с подключением css и js файлов, закомитить, залить на гитхаб
8) написать разметку и стили страницы, закомитить, залить на гитхаб
9) в js файле написать код приложения

приложение будет состоять из 3 слоев
1) слой взаимодействия с пользователем. тут мы находим те элементы по которым будет кликать пользователь и подписываем на события кликов по ним. все обработчики событий вызывают методы из второго слоя - слоя бизнес логики
2) слой бизнес логики - тут мы описываем процесс игры. в основном это то, что происходит при клике на клетку в поле. нужно хранить в модели данных что эта клетка помечена крестиком или ноликом. затем проверить не закрыта ли строка или столбец или диагонали ноликами крестиками (т.е. проверить не завершен ли раунд). если раунд завершен обновить счет и запустить новый раунд. если не завершен то поменять текущего игрока и позволить ему ходить

как будет работать приложение:
1) при старте мы создаем новую игру и ждем когда юзер начнет тыкать по клеткам поля
2) когда кликнули по клетке поля:
	2.1) проверям что оно еще не занята, если занята то ничего не делаем
	2.2) сохраняем крестик или нолик в соответствующую клетку в модели данных (также отмечаем клетку в интерфейсе крестиком или ноликом)
	2.3) проверяем не завершился ли раунд (т.е. проверям не заполнена ли какая нибудь строка столбец или диагональ полностью крестиками или ноликами)
	2.4) если раунд звершился, обновляем счет в модели и отображаем его в интерфейсе и запускаем новый раунд (по сути в модели добавится еще один раунд и игровое поле в интерфейсе очистится)
	2.5) если не завершился, то ничего не делаем, а ждем когда юзер кликнет по клетке в очередной раз

основные сущности:
1) модель данных - объект Game
2) ядро бизнес-логики - объект GameLogic
3) контроллер пользовательского вода GameController
